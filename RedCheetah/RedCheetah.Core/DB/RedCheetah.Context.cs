//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RedCheetah.Core.DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RedCheetahEntities : DbContext
    {
        public RedCheetahEntities()
            : base("name=RedCheetahEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AdPlan> AdPlans { get; set; }
        public virtual DbSet<AdvertisersRequest> AdvertisersRequests { get; set; }
        public virtual DbSet<AuditTrail> AuditTrails { get; set; }
        public virtual DbSet<ChannelPartnerPaymentInstallment> ChannelPartnerPaymentInstallments { get; set; }
        public virtual DbSet<ChannelPartnerReferralQuestionResponse> ChannelPartnerReferralQuestionResponses { get; set; }
        public virtual DbSet<ChannelPartnerRepCode> ChannelPartnerRepCodes { get; set; }
        public virtual DbSet<ChannelPartnersRequest> ChannelPartnersRequests { get; set; }
        public virtual DbSet<ChannelPartnerUser> ChannelPartnerUsers { get; set; }
        public virtual DbSet<ChannelPartnerUsers_Temp> ChannelPartnerUsers_Temp { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<ContactUsRequest> ContactUsRequests { get; set; }
        public virtual DbSet<CustomerCount> CustomerCounts { get; set; }
        public virtual DbSet<CustomerRange> CustomerRanges { get; set; }
        public virtual DbSet<DeliveryMethod> DeliveryMethods { get; set; }
        public virtual DbSet<Device> Devices { get; set; }
        public virtual DbSet<DeviceCode> DeviceCodes { get; set; }
        public virtual DbSet<DeviceConnect> DeviceConnects { get; set; }
        public virtual DbSet<DeviceInfo> DeviceInfos { get; set; }
        public virtual DbSet<DeviceLocation> DeviceLocations { get; set; }
        public virtual DbSet<Industry> Industries { get; set; }
        public virtual DbSet<KYCUploadId> KYCUploadIds { get; set; }
        public virtual DbSet<MessageRead> MessageReads { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<NatureOfBusiness> NatureOfBusinesses { get; set; }
        public virtual DbSet<NatureOfCustomerBusiness> NatureOfCustomerBusinesses { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<PickUpLocation_old> PickUpLocation_old { get; set; }
        public virtual DbSet<RC_CHANNELS> RC_CHANNELS { get; set; }
        public virtual DbSet<RC_LOCATIONS> RC_LOCATIONS { get; set; }
        public virtual DbSet<RC_MODEMS> RC_MODEMS { get; set; }
        public virtual DbSet<RC_SECTORS> RC_SECTORS { get; set; }
        public virtual DbSet<RC_Sessions> RC_Sessions { get; set; }
        public virtual DbSet<RCRegisteredDevice> RCRegisteredDevices { get; set; }
        public virtual DbSet<RedCheetahUser> RedCheetahUsers { get; set; }
        public virtual DbSet<ServiceParameter> ServiceParameters { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<SwiftSite> SwiftSites { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<UserToDisableOrEnable> UserToDisableOrEnables { get; set; }
        public virtual DbSet<WorldCupRegistration> WorldCupRegistrations { get; set; }
        public virtual DbSet<C__MigrationHistory_bkup> C__MigrationHistory_bkup { get; set; }
        public virtual DbSet<ChannelPartnerPaymentOption> ChannelPartnerPaymentOptions { get; set; }
        public virtual DbSet<ChannelPartnerRepCode2> ChannelPartnerRepCode2 { get; set; }
        public virtual DbSet<ChannelPartnerUsers_18thMay2018> ChannelPartnerUsers_18thMay2018 { get; set; }
        public virtual DbSet<ChannelPartnerUsers_19_Mar_2018> ChannelPartnerUsers_19_Mar_2018 { get; set; }
        public virtual DbSet<ChannelPartnerUsers_bakup> ChannelPartnerUsers_bakup { get; set; }
        public virtual DbSet<ChannelPartnerUsers_old> ChannelPartnerUsers_old { get; set; }
        public virtual DbSet<City1> City1 { get; set; }
        public virtual DbSet<Payment_21_May_2018> Payment_21_May_2018 { get; set; }
        public virtual DbSet<PickUpLocation> PickUpLocations { get; set; }
        public virtual DbSet<RC_MODEMS_BKP_050718> RC_MODEMS_BKP_050718 { get; set; }
        public virtual DbSet<RCRegisteredDevices_BETA_BKP_260218> RCRegisteredDevices_BETA_BKP_260218 { get; set; }
        public virtual DbSet<Referral> Referrals { get; set; }
        public virtual DbSet<ReferralType> ReferralTypes { get; set; }
        public virtual DbSet<States_old> States_old { get; set; }
        public virtual DbSet<UserStatu> UserStatus { get; set; }
        public virtual DbSet<RC_MODEM_INFORMATION> RC_MODEM_INFORMATION { get; set; }
    
        public virtual int proc_AdvertiserInsertRequest(string companyName, string companyAddress, string companyPhone, string industry, string emailAddress, string contactPersonsPhoneNumber, ObjectParameter status)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var companyAddressParameter = companyAddress != null ?
                new ObjectParameter("companyAddress", companyAddress) :
                new ObjectParameter("companyAddress", typeof(string));
    
            var companyPhoneParameter = companyPhone != null ?
                new ObjectParameter("companyPhone", companyPhone) :
                new ObjectParameter("companyPhone", typeof(string));
    
            var industryParameter = industry != null ?
                new ObjectParameter("Industry", industry) :
                new ObjectParameter("Industry", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("emailAddress", emailAddress) :
                new ObjectParameter("emailAddress", typeof(string));
    
            var contactPersonsPhoneNumberParameter = contactPersonsPhoneNumber != null ?
                new ObjectParameter("ContactPersonsPhoneNumber", contactPersonsPhoneNumber) :
                new ObjectParameter("ContactPersonsPhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_AdvertiserInsertRequest", companyNameParameter, companyAddressParameter, companyPhoneParameter, industryParameter, emailAddressParameter, contactPersonsPhoneNumberParameter, status);
        }
    
        public virtual int proc_AuditTrailInsert(string useremail, string iPAddress, string action)
        {
            var useremailParameter = useremail != null ?
                new ObjectParameter("Useremail", useremail) :
                new ObjectParameter("Useremail", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_AuditTrailInsert", useremailParameter, iPAddressParameter, actionParameter);
        }
    
        public virtual int proc_ChannelPartnerInsertRequest(string businessName, string contactPerson, string contactAddress, string emailAddress, string natureOfBusiness, Nullable<int> totalDailyWalkInCustomers, Nullable<int> averageDailyWalkInCustomers, Nullable<int> requestType, ObjectParameter status)
        {
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var contactAddressParameter = contactAddress != null ?
                new ObjectParameter("ContactAddress", contactAddress) :
                new ObjectParameter("ContactAddress", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var natureOfBusinessParameter = natureOfBusiness != null ?
                new ObjectParameter("NatureOfBusiness", natureOfBusiness) :
                new ObjectParameter("NatureOfBusiness", typeof(string));
    
            var totalDailyWalkInCustomersParameter = totalDailyWalkInCustomers.HasValue ?
                new ObjectParameter("totalDailyWalkInCustomers", totalDailyWalkInCustomers) :
                new ObjectParameter("totalDailyWalkInCustomers", typeof(int));
    
            var averageDailyWalkInCustomersParameter = averageDailyWalkInCustomers.HasValue ?
                new ObjectParameter("averageDailyWalkInCustomers", averageDailyWalkInCustomers) :
                new ObjectParameter("averageDailyWalkInCustomers", typeof(int));
    
            var requestTypeParameter = requestType.HasValue ?
                new ObjectParameter("requestType", requestType) :
                new ObjectParameter("requestType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_ChannelPartnerInsertRequest", businessNameParameter, contactPersonParameter, contactAddressParameter, emailAddressParameter, natureOfBusinessParameter, totalDailyWalkInCustomersParameter, averageDailyWalkInCustomersParameter, requestTypeParameter, status);
        }
    
        public virtual int proc_ChannelPartnerInsertRequest_old(string businessName, string contactPerson, string contactAddress, string emailAddress, string natureOfBusiness, Nullable<int> totalDailyWalkInCustomers, Nullable<int> averageDailyWalkInCustomers, ObjectParameter status)
        {
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var contactAddressParameter = contactAddress != null ?
                new ObjectParameter("ContactAddress", contactAddress) :
                new ObjectParameter("ContactAddress", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var natureOfBusinessParameter = natureOfBusiness != null ?
                new ObjectParameter("NatureOfBusiness", natureOfBusiness) :
                new ObjectParameter("NatureOfBusiness", typeof(string));
    
            var totalDailyWalkInCustomersParameter = totalDailyWalkInCustomers.HasValue ?
                new ObjectParameter("totalDailyWalkInCustomers", totalDailyWalkInCustomers) :
                new ObjectParameter("totalDailyWalkInCustomers", typeof(int));
    
            var averageDailyWalkInCustomersParameter = averageDailyWalkInCustomers.HasValue ?
                new ObjectParameter("averageDailyWalkInCustomers", averageDailyWalkInCustomers) :
                new ObjectParameter("averageDailyWalkInCustomers", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_ChannelPartnerInsertRequest_old", businessNameParameter, contactPersonParameter, contactAddressParameter, emailAddressParameter, natureOfBusinessParameter, totalDailyWalkInCustomersParameter, averageDailyWalkInCustomersParameter, status);
        }
    
        public virtual int proc_ChannelPartnerInsertRequest_uat(string businessName, string contactPerson, string contactAddress, string emailAddress, string natureOfBusiness, Nullable<int> totalDailyWalkInCustomers, Nullable<int> averageDailyWalkInCustomers, string phoneNumber, Nullable<int> requestType, ObjectParameter status)
        {
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var contactAddressParameter = contactAddress != null ?
                new ObjectParameter("ContactAddress", contactAddress) :
                new ObjectParameter("ContactAddress", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var natureOfBusinessParameter = natureOfBusiness != null ?
                new ObjectParameter("NatureOfBusiness", natureOfBusiness) :
                new ObjectParameter("NatureOfBusiness", typeof(string));
    
            var totalDailyWalkInCustomersParameter = totalDailyWalkInCustomers.HasValue ?
                new ObjectParameter("totalDailyWalkInCustomers", totalDailyWalkInCustomers) :
                new ObjectParameter("totalDailyWalkInCustomers", typeof(int));
    
            var averageDailyWalkInCustomersParameter = averageDailyWalkInCustomers.HasValue ?
                new ObjectParameter("averageDailyWalkInCustomers", averageDailyWalkInCustomers) :
                new ObjectParameter("averageDailyWalkInCustomers", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));
    
            var requestTypeParameter = requestType.HasValue ?
                new ObjectParameter("requestType", requestType) :
                new ObjectParameter("requestType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_ChannelPartnerInsertRequest_uat", businessNameParameter, contactPersonParameter, contactAddressParameter, emailAddressParameter, natureOfBusinessParameter, totalDailyWalkInCustomersParameter, averageDailyWalkInCustomersParameter, phoneNumberParameter, requestTypeParameter, status);
        }
    
        public virtual int proc_ChannelPartnerInsertRequestNew(string businessName, string contactPerson, string contactAddress, string emailAddress, string natureOfBusiness, Nullable<int> totalDailyWalkInCustomers, Nullable<int> averageDailyWalkInCustomers, string phoneNumber, Nullable<int> requestType, ObjectParameter status)
        {
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var contactAddressParameter = contactAddress != null ?
                new ObjectParameter("ContactAddress", contactAddress) :
                new ObjectParameter("ContactAddress", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var natureOfBusinessParameter = natureOfBusiness != null ?
                new ObjectParameter("NatureOfBusiness", natureOfBusiness) :
                new ObjectParameter("NatureOfBusiness", typeof(string));
    
            var totalDailyWalkInCustomersParameter = totalDailyWalkInCustomers.HasValue ?
                new ObjectParameter("totalDailyWalkInCustomers", totalDailyWalkInCustomers) :
                new ObjectParameter("totalDailyWalkInCustomers", typeof(int));
    
            var averageDailyWalkInCustomersParameter = averageDailyWalkInCustomers.HasValue ?
                new ObjectParameter("averageDailyWalkInCustomers", averageDailyWalkInCustomers) :
                new ObjectParameter("averageDailyWalkInCustomers", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));
    
            var requestTypeParameter = requestType.HasValue ?
                new ObjectParameter("requestType", requestType) :
                new ObjectParameter("requestType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_ChannelPartnerInsertRequestNew", businessNameParameter, contactPersonParameter, contactAddressParameter, emailAddressParameter, natureOfBusinessParameter, totalDailyWalkInCustomersParameter, averageDailyWalkInCustomersParameter, phoneNumberParameter, requestTypeParameter, status);
        }
    
        public virtual ObjectResult<proc_ChannelPartnerReferralReports_Result> proc_ChannelPartnerReferralReports(Nullable<int> referraltype)
        {
            var referraltypeParameter = referraltype.HasValue ?
                new ObjectParameter("referraltype", referraltype) :
                new ObjectParameter("referraltype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ChannelPartnerReferralReports_Result>("proc_ChannelPartnerReferralReports", referraltypeParameter);
        }
    
        public virtual ObjectResult<proc_chkIfEmailExists_Result> proc_chkIfEmailExists(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_chkIfEmailExists_Result>("proc_chkIfEmailExists", emailParameter);
        }
    
        public virtual int proc_ContactUsInsertRequest(string name, string phone, string emailAddress, string message, ObjectParameter status)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("emailAddress", emailAddress) :
                new ObjectParameter("emailAddress", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_ContactUsInsertRequest", nameParameter, phoneParameter, emailAddressParameter, messageParameter, status);
        }
    
        public virtual ObjectResult<Nullable<decimal>> proc_GeneraetRedCheetahRepCode(string referralCode, string surname, string firstName, string otherName, string phoneNo, string email)
        {
            var referralCodeParameter = referralCode != null ?
                new ObjectParameter("ReferralCode", referralCode) :
                new ObjectParameter("ReferralCode", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var otherNameParameter = otherName != null ?
                new ObjectParameter("OtherName", otherName) :
                new ObjectParameter("OtherName", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("proc_GeneraetRedCheetahRepCode", referralCodeParameter, surnameParameter, firstNameParameter, otherNameParameter, phoneNoParameter, emailParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> proc_GenerateRedCheetahRepCode(string referralCode, string surname, string firstName, string otherName, string phoneNo, string email)
        {
            var referralCodeParameter = referralCode != null ?
                new ObjectParameter("ReferralCode", referralCode) :
                new ObjectParameter("ReferralCode", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var otherNameParameter = otherName != null ?
                new ObjectParameter("OtherName", otherName) :
                new ObjectParameter("OtherName", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("proc_GenerateRedCheetahRepCode", referralCodeParameter, surnameParameter, firstNameParameter, otherNameParameter, phoneNoParameter, emailParameter);
        }
    
        public virtual int proc_InsertOrderDetailRecord(Nullable<int> orderId, string productDescription, Nullable<decimal> price, ObjectParameter status)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("productDescription", productDescription) :
                new ObjectParameter("productDescription", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InsertOrderDetailRecord", orderIdParameter, productDescriptionParameter, priceParameter, status);
        }
    
        public virtual int proc_InsertOrderRecord(string emailAddress, Nullable<decimal> amount_paid, Nullable<decimal> actual_amount, ObjectParameter status)
        {
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("emailAddress", emailAddress) :
                new ObjectParameter("emailAddress", typeof(string));
    
            var amount_paidParameter = amount_paid.HasValue ?
                new ObjectParameter("amount_paid", amount_paid) :
                new ObjectParameter("amount_paid", typeof(decimal));
    
            var actual_amountParameter = actual_amount.HasValue ?
                new ObjectParameter("actual_amount", actual_amount) :
                new ObjectParameter("actual_amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InsertOrderRecord", emailAddressParameter, amount_paidParameter, actual_amountParameter, status);
        }
    
        public virtual int proc_InsertSignUpRecords(string applicationId, string businessName, string firstName, string otherName, string lastName, string mobilePhone, string emailAddress, string streetAddress, Nullable<int> state, Nullable<int> city, string password, string vCode, Nullable<int> deliveryoption, Nullable<int> pickUpLocation, string signature, ObjectParameter status)
        {
            var applicationIdParameter = applicationId != null ?
                new ObjectParameter("applicationId", applicationId) :
                new ObjectParameter("applicationId", typeof(string));
    
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var otherNameParameter = otherName != null ?
                new ObjectParameter("OtherName", otherName) :
                new ObjectParameter("OtherName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("mobilePhone", mobilePhone) :
                new ObjectParameter("mobilePhone", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("emailAddress", emailAddress) :
                new ObjectParameter("emailAddress", typeof(string));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("streetAddress", streetAddress) :
                new ObjectParameter("streetAddress", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var vCodeParameter = vCode != null ?
                new ObjectParameter("VCode", vCode) :
                new ObjectParameter("VCode", typeof(string));
    
            var deliveryoptionParameter = deliveryoption.HasValue ?
                new ObjectParameter("deliveryoption", deliveryoption) :
                new ObjectParameter("deliveryoption", typeof(int));
    
            var pickUpLocationParameter = pickUpLocation.HasValue ?
                new ObjectParameter("pickUpLocation", pickUpLocation) :
                new ObjectParameter("pickUpLocation", typeof(int));
    
            var signatureParameter = signature != null ?
                new ObjectParameter("signature", signature) :
                new ObjectParameter("signature", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InsertSignUpRecords", applicationIdParameter, businessNameParameter, firstNameParameter, otherNameParameter, lastNameParameter, mobilePhoneParameter, emailAddressParameter, streetAddressParameter, stateParameter, cityParameter, passwordParameter, vCodeParameter, deliveryoptionParameter, pickUpLocationParameter, signatureParameter, status);
        }
    
        public virtual int proc_InsertSignUpRecordsInTempTable(string applicationId, string businessName, string firstName, string otherName, string lastName, string mobilePhone, string emailAddress, string streetAddress, Nullable<int> state, Nullable<int> city, string password, string vCode, ObjectParameter status)
        {
            var applicationIdParameter = applicationId != null ?
                new ObjectParameter("applicationId", applicationId) :
                new ObjectParameter("applicationId", typeof(string));
    
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var otherNameParameter = otherName != null ?
                new ObjectParameter("OtherName", otherName) :
                new ObjectParameter("OtherName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("mobilePhone", mobilePhone) :
                new ObjectParameter("mobilePhone", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("emailAddress", emailAddress) :
                new ObjectParameter("emailAddress", typeof(string));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("streetAddress", streetAddress) :
                new ObjectParameter("streetAddress", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var vCodeParameter = vCode != null ?
                new ObjectParameter("VCode", vCode) :
                new ObjectParameter("VCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InsertSignUpRecordsInTempTable", applicationIdParameter, businessNameParameter, firstNameParameter, otherNameParameter, lastNameParameter, mobilePhoneParameter, emailAddressParameter, streetAddressParameter, stateParameter, cityParameter, passwordParameter, vCodeParameter, status);
        }
    
        public virtual int proc_InsertSignUpRecordsInTempTableNew(string applicationId, string businessName, string firstName, string otherName, string lastName, string mobilePhone, string emailAddress, string streetAddress, Nullable<int> state, Nullable<int> city, string password, string vCode, Nullable<int> referralQuestionResponse, Nullable<int> referralOption, string referralValueDesc, ObjectParameter status)
        {
            var applicationIdParameter = applicationId != null ?
                new ObjectParameter("applicationId", applicationId) :
                new ObjectParameter("applicationId", typeof(string));
    
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var otherNameParameter = otherName != null ?
                new ObjectParameter("OtherName", otherName) :
                new ObjectParameter("OtherName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("mobilePhone", mobilePhone) :
                new ObjectParameter("mobilePhone", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("emailAddress", emailAddress) :
                new ObjectParameter("emailAddress", typeof(string));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("streetAddress", streetAddress) :
                new ObjectParameter("streetAddress", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var vCodeParameter = vCode != null ?
                new ObjectParameter("VCode", vCode) :
                new ObjectParameter("VCode", typeof(string));
    
            var referralQuestionResponseParameter = referralQuestionResponse.HasValue ?
                new ObjectParameter("ReferralQuestionResponse", referralQuestionResponse) :
                new ObjectParameter("ReferralQuestionResponse", typeof(int));
    
            var referralOptionParameter = referralOption.HasValue ?
                new ObjectParameter("referralOption", referralOption) :
                new ObjectParameter("referralOption", typeof(int));
    
            var referralValueDescParameter = referralValueDesc != null ?
                new ObjectParameter("ReferralValueDesc", referralValueDesc) :
                new ObjectParameter("ReferralValueDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InsertSignUpRecordsInTempTableNew", applicationIdParameter, businessNameParameter, firstNameParameter, otherNameParameter, lastNameParameter, mobilePhoneParameter, emailAddressParameter, streetAddressParameter, stateParameter, cityParameter, passwordParameter, vCodeParameter, referralQuestionResponseParameter, referralOptionParameter, referralValueDescParameter, status);
        }
    
        public virtual int proc_InsertSignUpRecordsNew(string applicationId, string businessName, string firstName, string otherName, string lastName, string mobilePhone, string emailAddress, string streetAddress, Nullable<int> state, Nullable<int> city, string password, string vCode, Nullable<int> deliveryoption, Nullable<int> pickUpLocation, string signature, Nullable<int> referralQuestionResponse, Nullable<int> referralOption, string referralValueDesc, ObjectParameter status)
        {
            var applicationIdParameter = applicationId != null ?
                new ObjectParameter("applicationId", applicationId) :
                new ObjectParameter("applicationId", typeof(string));
    
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var otherNameParameter = otherName != null ?
                new ObjectParameter("OtherName", otherName) :
                new ObjectParameter("OtherName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("mobilePhone", mobilePhone) :
                new ObjectParameter("mobilePhone", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("emailAddress", emailAddress) :
                new ObjectParameter("emailAddress", typeof(string));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("streetAddress", streetAddress) :
                new ObjectParameter("streetAddress", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var vCodeParameter = vCode != null ?
                new ObjectParameter("VCode", vCode) :
                new ObjectParameter("VCode", typeof(string));
    
            var deliveryoptionParameter = deliveryoption.HasValue ?
                new ObjectParameter("deliveryoption", deliveryoption) :
                new ObjectParameter("deliveryoption", typeof(int));
    
            var pickUpLocationParameter = pickUpLocation.HasValue ?
                new ObjectParameter("pickUpLocation", pickUpLocation) :
                new ObjectParameter("pickUpLocation", typeof(int));
    
            var signatureParameter = signature != null ?
                new ObjectParameter("signature", signature) :
                new ObjectParameter("signature", typeof(string));
    
            var referralQuestionResponseParameter = referralQuestionResponse.HasValue ?
                new ObjectParameter("ReferralQuestionResponse", referralQuestionResponse) :
                new ObjectParameter("ReferralQuestionResponse", typeof(int));
    
            var referralOptionParameter = referralOption.HasValue ?
                new ObjectParameter("referralOption", referralOption) :
                new ObjectParameter("referralOption", typeof(int));
    
            var referralValueDescParameter = referralValueDesc != null ?
                new ObjectParameter("ReferralValueDesc", referralValueDesc) :
                new ObjectParameter("ReferralValueDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InsertSignUpRecordsNew", applicationIdParameter, businessNameParameter, firstNameParameter, otherNameParameter, lastNameParameter, mobilePhoneParameter, emailAddressParameter, streetAddressParameter, stateParameter, cityParameter, passwordParameter, vCodeParameter, deliveryoptionParameter, pickUpLocationParameter, signatureParameter, referralQuestionResponseParameter, referralOptionParameter, referralValueDescParameter, status);
        }
    
        public virtual ObjectResult<proc_RptRedCheetahChannelPartners_Result> proc_RptRedCheetahChannelPartners()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_RptRedCheetahChannelPartners_Result>("proc_RptRedCheetahChannelPartners");
        }
    
        public virtual ObjectResult<proc_RptRedCheetahChannelPartnersFullPaymt_Result> proc_RptRedCheetahChannelPartnersFullPaymt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_RptRedCheetahChannelPartnersFullPaymt_Result>("proc_RptRedCheetahChannelPartnersFullPaymt");
        }
    
        public virtual ObjectResult<proc_RptRedCheetahChannelPartnersInstalmtPaymt_Result> proc_RptRedCheetahChannelPartnersInstalmtPaymt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_RptRedCheetahChannelPartnersInstalmtPaymt_Result>("proc_RptRedCheetahChannelPartnersInstalmtPaymt");
        }
    
        public virtual int proc_updateApplicationProgressStatus(string applicationId, Nullable<int> applicationProgress, ObjectParameter status)
        {
            var applicationIdParameter = applicationId != null ?
                new ObjectParameter("applicationId", applicationId) :
                new ObjectParameter("applicationId", typeof(string));
    
            var applicationProgressParameter = applicationProgress.HasValue ?
                new ObjectParameter("applicationProgress", applicationProgress) :
                new ObjectParameter("applicationProgress", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_updateApplicationProgressStatus", applicationIdParameter, applicationProgressParameter, status);
        }
    
        public virtual int proc_updateDbWithIDRecord(Nullable<int> recordNo, string ftp_file_path_id, ObjectParameter status)
        {
            var recordNoParameter = recordNo.HasValue ?
                new ObjectParameter("recordNo", recordNo) :
                new ObjectParameter("recordNo", typeof(int));
    
            var ftp_file_path_idParameter = ftp_file_path_id != null ?
                new ObjectParameter("ftp_file_path_id", ftp_file_path_id) :
                new ObjectParameter("ftp_file_path_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_updateDbWithIDRecord", recordNoParameter, ftp_file_path_idParameter, status);
        }
    
        public virtual int proc_updateDbWithUtilityRecord(Nullable<int> recordNo, string ftp_file_path_utility, ObjectParameter status)
        {
            var recordNoParameter = recordNo.HasValue ?
                new ObjectParameter("recordNo", recordNo) :
                new ObjectParameter("recordNo", typeof(int));
    
            var ftp_file_path_utilityParameter = ftp_file_path_utility != null ?
                new ObjectParameter("ftp_file_path_utility", ftp_file_path_utility) :
                new ObjectParameter("ftp_file_path_utility", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_updateDbWithUtilityRecord", recordNoParameter, ftp_file_path_utilityParameter, status);
        }
    
        public virtual int proc_UpdateOrderRecordWithPaymt(Nullable<int> orderId, Nullable<decimal> camount, ObjectParameter status)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var camountParameter = camount.HasValue ?
                new ObjectParameter("camount", camount) :
                new ObjectParameter("camount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_UpdateOrderRecordWithPaymt", orderIdParameter, camountParameter, status);
        }
    
        public virtual int proc_UpdateOrderTable(Nullable<decimal> camount, Nullable<int> orderId, ObjectParameter status)
        {
            var camountParameter = camount.HasValue ?
                new ObjectParameter("camount", camount) :
                new ObjectParameter("camount", typeof(decimal));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_UpdateOrderTable", camountParameter, orderIdParameter, status);
        }
    
        public virtual int proc_updateUserPassword(string useremail, string pwd, ObjectParameter status)
        {
            var useremailParameter = useremail != null ?
                new ObjectParameter("Useremail", useremail) :
                new ObjectParameter("Useremail", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_updateUserPassword", useremailParameter, pwdParameter, status);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int uspCalcVelocity(Nullable<double> distance, Nullable<double> time, ObjectParameter velocity)
        {
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("distance", distance) :
                new ObjectParameter("distance", typeof(double));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCalcVelocity", distanceParameter, timeParameter, velocity);
        }
    }
}
